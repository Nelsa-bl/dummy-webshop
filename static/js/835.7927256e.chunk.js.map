{"version":3,"file":"static/js/835.7927256e.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/CardGroup.js","components/search/search.tsx","components/products/products.tsx"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('card-group');","// Styles\r\nimport './search.styles.scss'\r\n\r\ntype Props = {\r\n    handleChange: (e: { target: { value: string; } }) => void;\r\n}\r\n\r\nconst SearchItem: React.FC<Props> = ({ handleChange }) => (\r\n\r\n        <div className=\"shop-page\">\r\n                <input type=\"search\"\r\n          // Onchange set new state by taking input value\r\n           onChange={handleChange}\r\n          className=\"searchInput\" \r\n          placeholder=\"Search products\" />\r\n    </div>\r\n);\r\n\r\nexport default SearchItem;","// Components\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport Card from \"react-bootstrap/Card\";\r\nimport CardGroup from 'react-bootstrap/CardGroup';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport Searchs from \"../search/search\";\r\n\r\n// Styles\r\nimport './products.styles.scss'\r\n\r\n// Types\r\nimport { CartItemType } from \"../../App\";\r\n\r\ntype Props = {\r\n    cartItems: CartItemType[];\r\n    data: CartItemType[] | undefined;\r\n    isLoading: boolean;\r\n    error: any;\r\n    addToCart: (clikedItem: CartItemType) => void;\r\n    search: string;\r\n    handleChange: (e: { target: { value: string; } }) => void;\r\n};\r\n\r\nconst ShopPage: React.FC<Props> = ({ cartItems, addToCart, search, handleChange, data, isLoading, error }) => {\r\n\r\n\r\n    // When loading\r\n    if (isLoading) return <Spinner animation={'border'} />;\r\n\r\n    // If error\r\n    if (error) return <Alert variant=\"danger\">Someting went wrong!</Alert>\r\n        \r\n        return (\r\n            <div className=\"shop-page\">\r\n                <Container>\r\n                    <Searchs handleChange={handleChange}/>\r\n                    <Row>\r\n                        {data?.filter(   \r\n                        s => s.title.toLowerCase().includes(search.toLocaleLowerCase()) || \r\n                        s.description.toLowerCase().includes(search.toLocaleLowerCase()))\r\n                        .map(item => (\r\n                            <Col item key={item.id} xs={12} sm={6} md={4} lg={3}>\r\n                                <CardGroup>\r\n                                    <Card>\r\n                                        <div className='imageHolder'>\r\n                                            <Card.Img className=\"img-fluid\" variant=\"top\" src={`${item.image}`} alt={`${item.title}`} />\r\n                                        </div>\r\n\r\n                                        <Card.Body>\r\n                                            <Card.Title>\r\n                                                <Link to={`/products/${item.id}`} >{item.title} </Link>                              \r\n                                            </Card.Title>\r\n                                            <span className='price'>{item.price} EUR</span>\r\n                                            {/* <Card.Text>\r\n                                            {item.description}\r\n                                            </Card.Text> */}\r\n                                        </Card.Body>\r\n                                        <span className='category-box'>{item.category}</span>\r\n                                        <Card.Footer>\r\n                                            <Button className='addToBasket-btn' variant=\"primary\" onClick={() => addToCart(item)}>Add to basket</Button>\r\n                                        </Card.Footer>\r\n                                            \r\n                                    </Card>\r\n                                </CardGroup>\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\nexport default ShopPage;"],"names":["CardImg","React","ref","bsPrefix","className","variant","as","Component","props","prefix","useBootstrapPrefix","_jsx","classNames","displayName","context","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","bg","text","border","body","defaultProps","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","handleChange","type","onChange","placeholder","cartItems","addToCart","search","data","isLoading","error","Spinner","animation","Alert","Container","Row","filter","s","title","toLowerCase","includes","toLocaleLowerCase","description","map","item","Col","xs","sm","md","lg","CardGroup","src","image","alt","to","id","price","category","Button","onClick"],"sourceRoot":""}